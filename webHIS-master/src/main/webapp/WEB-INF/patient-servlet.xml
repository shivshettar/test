<?xml  version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd 
		http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.wenzins.webhis.controller" />

	<annotation-driven />
	<!-- Spring AOP to intercept the method to inject logging -->
	<aop:aspectj-autoproxy />

	<default-servlet-handler />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:messages" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>

	<beans:bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/jdbc.properties" />

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation">
			<beans:value>classpath:hibernate.cfg.xml</beans:value>
		</beans:property>
		<beans:property name="configurationClass">
			<beans:value>org.hibernate.cfg.AnnotationConfiguration</beans:value>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${jdbc.dialect}</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>


	<beans:bean id="patientDAO" class="com.wenzins.webhis.dao.PatientDaoImpl"></beans:bean>
	<beans:bean id="patientMgmtService"
		class="com.wenzins.webhis.service.PatientMgmtServiceImpl"></beans:bean>
		
		<!-- Spring AOP to intercept the method to inject login -->
		
	<beans:bean class="com.wenzins.webhis.dao.LoginDaoImpl" id="loginDAO"/>
	<beans:bean class="com.wenzins.webhis.service.LoginMgmtServiceImpl" id="loginMgmtService"/>

	<!-- Spring AOP to intercept the method to inject Appointment -->
	<beans:bean class="com.wenzins.webhis.dao.AppointmentDAOImpl" id="appointmentDAO"/>
	<beans:bean class="com.wenzins.webhis.service.AppointmentMgmtServiceImpl" id="appointmentMgmtService"/>
	
	<!-- Spring AOP to intercept the method to inject DoctorDetails -->
	<beans:bean class="com.wenzins.webhis.dao.DoctorDaoImpl" id="doctorDAO"/>
	<beans:bean class="com.wenzins.webhis.service.DoctorMgmtServiceImpl" id="doctorMgmtService"/>
	
	<!-- Spring AOP to intercept the method to inject DoctorDetails -->
	<beans:bean class="com.wenzins.webhis.dao.DepartmentDaoImpl" id="departmentDAO"/>
	<beans:bean class="com.wenzins.webhis.service.DepartmentMgmtServiceImpl" id="departmentMgmtService"/>
	
	
	<beans:bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<beans:property name="prefixJson" value="false" />
		<beans:property name="supportedMediaTypes" value="application/json" />
	</beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- <beans:bean id="documentationController" class="com.knappsack.swagger4springweb.controller.ApiDocumentationController" 
		p:basePath="http://localhost:8080/webhis" p:baseControllerPackage="com.wenzins.webhis.controller" 
		p:baseModelPackage="com.wenzins.webhis.controller.entity" p:apiVersion="v1" 
		/> -->
	<tx:annotation-driven />
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	
	<!-- Aspect for logging -->
	<beans:bean id="logAspect" class="com.wenzins.webhis.aspects.LoggingAspect" />


</beans:beans>